{"version":3,"sources":["utils/useLogs.js","components/Log.js","components/Container.js","components/List.js","components/Today.js","App.js","serviceWorker.js","index.js"],"names":["logsStorageKey","useLogs","_useState","useState","_useState2","Object","slicedToArray","logs","setLogs","useEffect","storageLogs","localStorage","getItem","JSON","parse","saveToLocalStorage","useCallback","newValue","setItem","stringify","addNewLog","newLog","nextLogs","concat","toConsumableArray","updateLog","id","updatedLogs","map","oldLog","_objectSpread","Log","_ref","defaultLog","value","log","setLog","_useState3","react_default","a","createElement","dist_index_esm","as","onSubmit","e","preventDefault","update","Log_objectSpread","date","moment","format","py","mb","forms_dist_index_esm","htmlFor","name","onChange","target","type","variant","sx","fontSize","fromNow","Container","props","assign","p","maxWidth","margin","ascending","descending","Sorter","sort","setSort","pt","sortLogs","b","valueOf","listStyle","m","DayLog","_ref2","day","isSame","open","setIsOpen","justifyContent","onClick","borderRadius","MdExpandLess","index_esm","key","List","_useLogs","_useState4","byDay","arguments","length","undefined","reduce","acc","push","groupLogsByDay","entries","_ref3","_ref4","dayLogs","Now","now","setNow","interval","setInterval","clearInterval","bg","backgroundImage","backgroundBlendMode","backgroundSize","color","Today","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","catch","error","rootElement","document","getElementById","ReactDOM","render","emotion_theming_browser_esm","theme","App_objectSpread","colors","primary","text","core_browser_esm","styles","css","_templateObject","fontFamily","height","children","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.62866361.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nconst logsStorageKey = \"my_logs\";\n\nexport default function useLogs() {\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const storageLogs = localStorage.getItem(logsStorageKey);\n    if (storageLogs) {\n      setLogs(JSON.parse(storageLogs));\n    }\n  }, [setLogs]);\n\n  const saveToLocalStorage = useCallback(newValue => {\n    localStorage.setItem(logsStorageKey, JSON.stringify(newValue));\n  }, []);\n\n  function updateLog(id, newLog) {\n    const updatedLogs = logs.map(oldLog => {\n      if (oldLog.id === id) {\n        return {\n          ...oldLog,\n          ...newLog\n        };\n      }\n      return oldLog;\n    });\n    setLogs(updatedLogs);\n    saveToLocalStorage(updatedLogs);\n  }\n  function addNewLog(newLog) {\n    const nextLogs = [...logs, newLog];\n    setLogs(nextLogs);\n    saveToLocalStorage(nextLogs);\n  }\n\n  return {\n    logs,\n    addNewLog,\n    updateLog\n  };\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { Card, Box, Button, Text } from \"rebass\";\nimport { Label, Textarea } from \"@rebass/forms\";\n\nexport default function Log({ addNewLog, defaultLog, updateLog }) {\n  const [log, setLog] = useState(defaultLog && defaultLog.value);\n  const [isEditing] = useState(!log);\n  function saveLog(e) {\n    e.preventDefault();\n\n    if (!defaultLog) {\n      const date = moment();\n      const id = date.format(\"dddd MMMM Do YYYY h:mm:ss a\");\n      addNewLog({\n        id,\n        date,\n        value: log\n      });\n    } else {\n      const update = {\n        ...defaultLog,\n        value: log\n      };\n      updateLog(update);\n    }\n    setLog(\"\");\n  }\n  if (isEditing) {\n    return (\n      <Box as=\"form\" onSubmit={saveLog} py={[2, 3]}>\n        <Box mb={2}>\n          <Label htmlFor=\"entry\">What occurred?</Label>\n          <Textarea\n            id=\"entry\"\n            name=\"entry\"\n            onChange={e => setLog(e.target.value)}\n            value={log}\n          />\n        </Box>\n        <Button type=\"submit\" variant=\"primary\">\n          save\n        </Button>\n      </Box>\n    );\n  }\n\n  return (\n    <Card mb={3}>\n      <Text>{log}</Text>\n      <Box sx={{ fontSize: 1, py: 2 }}>\n        <Text>{moment(defaultLog.date).format(\"h:mm:ss a\")}</Text>\n        <Text>{moment(defaultLog.date).fromNow()}</Text>\n      </Box>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"rebass\";\n\nexport default function Container(props) {\n  return (\n    <Box\n      sx={{\n        p: 3,\n        maxWidth: 600,\n        margin: \"auto\"\n      }}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport moment from \"moment\";\nimport useLogs from \"utils/useLogs\";\nimport Log from \"components/Log\";\nimport { Box, Flex, Heading, Button } from \"rebass\";\nimport Container from \"components/Container\";\nimport { Label, Select } from \"@rebass/forms\";\n\nconst ascending = \"ASC\";\nconst descending = \"DEC\";\n\nfunction Sorter({ sort, setSort }) {\n  return (\n    <Box pt={[2, 4]}>\n      <Label htmlFor=\"sorting\" mb={1}>\n        Logs sorting\n      </Label>\n      <Select\n        id=\"sorting\"\n        name=\"sorting\"\n        value={sort}\n        onChange={e => {\n          setSort(e.target.value);\n        }}\n      >\n        <option value={ascending}>ascending</option>\n        <option value={descending}>descending</option>\n      </Select>\n    </Box>\n  );\n}\n\nfunction groupLogsByDay(logs = []) {\n  return logs.reduce((acc, log) => {\n    const day = moment(log.date).format(\"YYYY-MM-DD\");\n\n    if (acc[day]) {\n      acc[day].push(log);\n    } else {\n      acc[day] = [log];\n    }\n    return acc;\n  }, {});\n}\n\nfunction sortLogs(logs, sort) {\n  return logs.sort((a, b) => {\n    if (sort === ascending) {\n      return moment(a.date).valueOf() - moment(b.date).valueOf();\n    }\n    return moment(b.date).valueOf() - moment(a.date).valueOf();\n  });\n}\n\nconst listStyle = {\n  listStyle: \"none\",\n  p: 0,\n  m: 0\n};\n\nfunction DayLog({ day, logs, sort, updateLog }) {\n  const [open, setIsOpen] = useState(moment(day).isSame(moment(), \"day\"));\n  return (\n    <Box as=\"li\" sx={{ mb: 1 }}>\n      <Flex justifyContent=\"space-between\">\n        <Heading>{moment(day).format(\"dddd\")}</Heading>\n\n        <Button onClick={() => setIsOpen(!open)} sx={{ borderRadius: 0 }}>\n          {open ? (\n            <Box as={MdExpandLess} sx={{ fontSize: [3, 4] }} />\n          ) : (\n            <MdExpandMore />\n          )}\n        </Button>\n      </Flex>\n      {open && (\n        <Box as=\"ul\" sx={listStyle}>\n          {sortLogs(logs, sort).map(log => (\n            <Box as=\"li\" key={log.id}>\n              <Log defaultLog={log} updateLog={updateLog} />\n            </Box>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default function List() {\n  const { logs, addNewLog, updateLog } = useLogs();\n  const [sort, setSort] = useState(descending);\n  const sortedLogs = sortLogs(logs);\n\n  const byDay = groupLogsByDay(sortedLogs);\n\n  return (\n    <Container>\n      <Box as=\"ul\" sx={listStyle}>\n        <Box as=\"li\">\n          <Log addNewLog={addNewLog} updateLog={updateLog} />\n        </Box>\n\n        {Object.entries(byDay).map(([day, dayLogs]) => (\n          <DayLog key={day} updateLog={updateLog} logs={dayLogs} day={day} />\n        ))}\n      </Box>\n      <Sorter sort={sort} setSort={setSort} />\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Container from \"components/Container\";\nimport { Heading, Box } from \"rebass\";\n\nfunction Now() {\n  const [now, setNow] = useState(moment());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(moment());\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [setNow]);\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          py: [3, 6],\n          bg: \"bg\",\n          backgroundImage:\n            \"url(https://images.unsplash.com/photo-1552484586-1a51df66315c?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=768&ixid=eyJhcHBfaWQiOjF9&ixlib=rb-1.2.1&q=80&w=1024)\",\n          backgroundBlendMode: \"multiply\",\n          backgroundSize: \"cover\",\n          color: \"bg\"\n        }}\n      >\n        <Container>\n          <Heading as=\"h1\" fontSize={[3, 4, 5]}>\n            {now.format(\"MMMM Do YYYY, h:mm:ss a\")}\n          </Heading>\n        </Container>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function Today() {\n  return (\n    <div>\n      <Now />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"@rebass/preset\";\nimport List from \"components/List\";\nimport Today from \"components/Today\";\nimport { Global, css } from \"@emotion/core\";\nimport { Box } from \"rebass\";\n\nexport default props => (\n  <ThemeProvider\n    theme={{\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary: \"#1F3611\",\n        text: \"#114\",\n        bg: \"#ffe500\"\n      }\n    }}\n  >\n    <Global\n      styles={css`\n        html {\n          background: #ffe500;\n        }\n        html,\n        body {\n          margin: 0;\n          padding: 0;\n        }\n      `}\n    />\n    <Box\n      sx={{\n        fontFamily: \"body\",\n        color: \"text\",\n        height: \"inherit\"\n      }}\n    >\n      <Today />\n      <List />\n      {props.children}\n    </Box>\n  </ThemeProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\nimport * as serviceWorker from \"serviceWorker\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}