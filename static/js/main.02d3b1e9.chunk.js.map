{"version":3,"sources":["utils/useLogs.js","components/Log.js","components/Container.js","components/List.js","components/Today.js","App.js","index.js"],"names":["logsStorageKey","useLogs","_useState","useState","_useState2","Object","slicedToArray","logs","setLogs","useEffect","storageLogs","localStorage","getItem","JSON","parse","saveToLocalStorage","useCallback","newValue","setItem","stringify","addNewLog","newLog","nextLogs","concat","toConsumableArray","updateLog","id","updatedLogs","map","oldLog","_objectSpread","Log","_ref","defaultLog","value","log","setLog","_useState3","react_default","a","createElement","index_esm","as","onSubmit","e","preventDefault","update","Log_objectSpread","date","moment","format","py","mb","dist_index_esm","htmlFor","name","onChange","target","type","variant","sx","fontSize","fromNow","Container","props","assign","p","maxWidth","margin","ascending","descending","Sorter","sort","setSort","pt","List","_useLogs","sortedLogs","b","valueOf","listStyle","m","key","Now","now","setNow","interval","setInterval","clearInterval","px","bg","backgroundImage","backgroundBlendMode","backgroundSize","color","textAlign","Today","console","theme","rootElement","document","getElementById","ReactDOM","render","emotion_theming_browser_esm","App_objectSpread","colors","primary","text","core_browser_esm","styles","css","_templateObject","fontFamily","height","children"],"mappings":"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","file":"static/js/main.02d3b1e9.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nconst logsStorageKey = \"my_logs\";\n\nexport default function useLogs() {\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const storageLogs = localStorage.getItem(logsStorageKey);\n    if (storageLogs) {\n      setLogs(JSON.parse(storageLogs));\n    }\n  }, [setLogs]);\n\n  const saveToLocalStorage = useCallback(newValue => {\n    localStorage.setItem(logsStorageKey, JSON.stringify(newValue));\n  }, []);\n\n  function updateLog(id, newLog) {\n    const updatedLogs = logs.map(oldLog => {\n      if (oldLog.id === id) {\n        return {\n          ...oldLog,\n          ...newLog\n        };\n      }\n      return oldLog;\n    });\n    setLogs(updatedLogs);\n    saveToLocalStorage(updatedLogs);\n  }\n  function addNewLog(newLog) {\n    const nextLogs = [...logs, newLog];\n    setLogs(nextLogs);\n    saveToLocalStorage(nextLogs);\n  }\n\n  return {\n    logs,\n    addNewLog,\n    updateLog\n  };\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { Card, Box, Button, Text } from \"rebass\";\nimport { Label, Textarea } from \"@rebass/forms\";\n\nexport default function Log({ addNewLog, defaultLog, updateLog }) {\n  const [log, setLog] = useState(defaultLog && defaultLog.value);\n  const [isEditing] = useState(!log);\n  function saveLog(e) {\n    e.preventDefault();\n\n    if (!defaultLog) {\n      const date = moment();\n      const id = date.format(\"dddd MMMM Do YYYY h:mm:ss a\");\n      addNewLog({\n        id,\n        date,\n        value: log\n      });\n    } else {\n      const update = {\n        ...defaultLog,\n        value: log\n      };\n      updateLog(update);\n    }\n    setLog(\"\");\n  }\n  if (isEditing) {\n    return (\n      <Box as=\"form\" onSubmit={saveLog} py={[2, 3]}>\n        <Box mb={2}>\n          <Label htmlFor=\"entry\">What occurred?</Label>\n          <Textarea\n            id=\"entry\"\n            name=\"entry\"\n            onChange={e => setLog(e.target.value)}\n            value={log}\n          />\n        </Box>\n        <Button type=\"submit\" variant=\"primary\">\n          save\n        </Button>\n      </Box>\n    );\n  }\n\n  return (\n    <Card mb={3}>\n      <Text>{log}</Text>\n      <Box sx={{ fontSize: 1, py: 2 }}>\n        <Text>{moment(defaultLog.date).format(\"h:mm:ss a\")}</Text>\n        <Text>{moment(defaultLog.date).fromNow()}</Text>\n      </Box>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"rebass\";\n\nexport default function Container(props) {\n  return (\n    <Box\n      sx={{\n        p: 3,\n        maxWidth: 600,\n        margin: \"auto\"\n      }}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport useLogs from \"utils/useLogs\";\nimport Log from \"components/Log\";\nimport { Box } from \"rebass\";\nimport Container from \"components/Container\";\nimport { Label, Select } from \"@rebass/forms\";\n\nconst ascending = \"ASC\";\nconst descending = \"DEC\";\n\nfunction Sorter({ sort, setSort }) {\n  return (\n    <Box pt={[2, 4]}>\n      <Label htmlFor=\"sorting\" mb={1}>\n        Logs sorting\n      </Label>\n      <Select\n        id=\"sorting\"\n        name=\"sorting\"\n        value={sort}\n        onChange={e => {\n          setSort(e.target.value);\n        }}\n      >\n        <option value={ascending}>ascending</option>\n        <option value={descending}>descending</option>\n      </Select>\n    </Box>\n  );\n}\n\nexport default function List() {\n  const { logs, addNewLog, updateLog } = useLogs();\n  const [sort, setSort] = useState(descending);\n  const sortedLogs = logs.sort((a, b) => {\n    if (sort === ascending) {\n      return moment(a.date).valueOf() - moment(b.date).valueOf();\n    }\n    return moment(b.date).valueOf() - moment(a.date).valueOf();\n  });\n  return (\n    <Container>\n      <Box\n        as=\"ul\"\n        sx={{\n          listStyle: \"none\",\n          p: 0,\n          m: 0\n        }}\n      >\n        <Box as=\"li\">\n          <Log addNewLog={addNewLog} updateLog={updateLog} />\n        </Box>\n        {sortedLogs.map(log => (\n          <Box as=\"li\" key={log.id}>\n            <Log defaultLog={log} updateLog={updateLog} />\n          </Box>\n        ))}\n      </Box>\n      <Sorter sort={sort} setSort={setSort} />\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Heading, Box } from \"rebass\";\n\nfunction Now() {\n  const [now, setNow] = useState(moment());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(moment());\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [setNow]);\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          px: 4,\n          py: 6,\n          bg: \"bg\",\n          backgroundImage:\n            \"url(https://source.unsplash.com/random/1024x768?weather)\",\n          backgroundBlendMode: \"multiply\",\n          backgroundSize: \"cover\",\n          color: \"white\"\n        }}\n      >\n        <Heading as=\"h1\" textAlign=\"center\" fontSize={[3, 4]}>\n          {now.format(\"MMMM Do YYYY, h:mm:ss a\")}\n        </Heading>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function Today() {\n  return (\n    <div>\n      <Now />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"@rebass/preset\";\nimport List from \"components/List\";\nimport Today from \"components/Today\";\nimport { Global, css } from \"@emotion/core\";\nimport { Box } from \"rebass\";\n\nconsole.log(theme);\n\nexport default props => (\n  <ThemeProvider\n    theme={{\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary: \"#6D4C41\",\n        text: \"#3E2723\",\n        bg: \"#b8d0d3\"\n      }\n    }}\n  >\n    <Global\n      styles={css`\n        html,\n        body,\n        #root {\n          margin: 0;\n          padding: 0;\n          height: 100%;\n        }\n      `}\n    />\n    <Box\n      sx={{\n        fontFamily: \"body\",\n        color: \"text\",\n        bg: \"bg\",\n        height: \"inherit\"\n      }}\n    >\n      <Today />\n      <List />\n      {props.children}\n    </Box>\n  </ThemeProvider>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}