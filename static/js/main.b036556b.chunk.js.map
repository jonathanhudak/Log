{"version":3,"sources":["index.js"],"names":["logsStorageKey","Log","_ref","addNewLog","defaultLog","updateLog","_useState","useState","value","_useState2","Object","_Users_jonathanhudak_lab_Log_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","log","setLog","_useState3","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","onSubmit","e","preventDefault","update","_objectSpread","date","moment","id","format","style","paddingTop","width","onChange","target","type","background","ascending","descending","List","_ref2","logs","_useState5","_useState6","sort","setSort","sortedLogs","b","valueOf","map","key","Now","_useState7","_useState8","now","setNow","useEffect","interval","setInterval","clearInterval","Today","rootElement","document","getElementById","ReactDOM","render","_useState9","_useState10","setLogs","storageLogs","localStorage","getItem","JSON","parse","saveToLocalStorage","useCallback","newValue","setItem","stringify","className","newLog","nextLogs","concat","_Users_jonathanhudak_lab_Log_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","updatedLogs","oldLog"],"mappings":"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","file":"static/js/main.b036556b.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport moment from \"moment\";\n\nconst logsStorageKey = \"my_logs\";\n\nfunction Log({ addNewLog, defaultLog, updateLog }) {\n  const [log, setLog] = useState(defaultLog && defaultLog.value);\n  const [isEditing] = useState(!log);\n  function saveLog(e) {\n    e.preventDefault();\n\n    if (!defaultLog) {\n      const date = moment();\n      const id = date.format(\"dddd MMMM Do YYYY h:mm:ss a\");\n      addNewLog({\n        id,\n        date,\n        value: log\n      });\n    } else {\n      const update = {\n        ...defaultLog,\n        value: log\n      };\n      updateLog(update);\n    }\n    setLog(\"\");\n  }\n  if (isEditing) {\n    return (\n      <form onSubmit={saveLog} style={{ paddingTop: 16 }}>\n        <label>\n          What happened?\n          <br />\n          <textarea\n            style={{ width: \"300px\" }}\n            onChange={e => setLog(e.target.value)}\n            value={log}\n          />\n        </label>\n        <button type=\"submit\" style={{ background: \"limegreen\" }}>\n          save\n        </button>\n      </form>\n    );\n  }\n\n  return (\n    <div>\n      <strong>{defaultLog && defaultLog.id}</strong> â€”{log}\n    </div>\n  );\n}\n\nconst ascending = \"ASC\";\nconst descending = \"DEC\";\nfunction List({ logs, addNewLog, updateLog }) {\n  const [sort, setSort] = useState(descending);\n  const sortedLogs = logs.sort((a, b) => {\n    if (sort === ascending) {\n      return moment(a.date).valueOf() - moment(b.date).valueOf();\n    }\n    return moment(b.date).valueOf() - moment(a.date).valueOf();\n  });\n  return (\n    <div>\n      <select\n        value={sort}\n        onChange={e => {\n          setSort(e.target.value);\n        }}\n      >\n        <option value={ascending}>ascending</option>\n        <option value={descending}>descending</option>\n      </select>\n      <ul>\n        <li>\n          <Log addNewLog={addNewLog} updateLog={updateLog} />\n        </li>\n        {sortedLogs.map(log => (\n          <li key={log.id}>\n            <Log defaultLog={log} updateLog={updateLog} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Now() {\n  const [now, setNow] = useState(moment());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(moment());\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [setNow]);\n\n  return <h1>{now.format(\"MMMM Do YYYY, h:mm:ss a\")}</h1>;\n}\n\nfunction Today() {\n  return (\n    <div>\n      <Now />\n    </div>\n  );\n}\n\nfunction App() {\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const storageLogs = localStorage.getItem(logsStorageKey);\n    if (storageLogs) {\n      setLogs(JSON.parse(storageLogs));\n    }\n  }, [setLogs]);\n  const saveToLocalStorage = useCallback(newValue => {\n    localStorage.setItem(logsStorageKey, JSON.stringify(newValue));\n  }, []);\n\n  function updateLog(id, newLog) {\n    const updatedLogs = logs.map(oldLog => {\n      if (oldLog.id === id) {\n        return {\n          ...oldLog,\n          ...newLog\n        };\n      }\n      return oldLog;\n    });\n    setLogs(updatedLogs);\n    saveToLocalStorage(updatedLogs);\n  }\n  function addNewLog(newLog) {\n    const nextLogs = [...logs, newLog];\n    setLogs(nextLogs);\n    saveToLocalStorage(nextLogs);\n  }\n  return (\n    <div className=\"App\">\n      <Today />\n      <List logs={logs} addNewLog={addNewLog} updateLog={updateLog} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}